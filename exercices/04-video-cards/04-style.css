:root {
  --color-background: #0f0f0f;
  --font-size-corps: 1rem;
  --font-size-caption: 0.618rem;
  --font-size-button: 1rem;
  --font-size-title: 1.2rem;
  --color-corps-text: #aaaaaa;
  --color-white-a: #121212;
  --color-white-a1: #3c3c3c;
  --color-white-a2: #4a4a4a;
  --color-white-a3: #797979;
  --gap-thin: 0.5rem;
  --gap-small: 1rem;
  --gap-medium: 2rem;
  --gap-large: 3rem;
}

html {
  font-size: 12px;
  font-family: Roboto, sans-serif;
}
@media screen and (min-width: 480px) {
  html {
    font-size: 14px;
  }
}

::-webkit-scrollbar {
  width: 5px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: var(--color-white-a3);
  border-radius: 10px;
}
::-webkit-scrollbar-thumb:hover {
  background: white;
}
* {
  scrollbar-width: thin;
  scrollbar-color: var(--color-white-a3) transparent;
}

body {
  background: var(--color-background);
  color: white;
  margin: 0;
}
a {
  text-decoration: none;
  color: inherit;
}

h2 {
  font-size: var(--font-size-title);
  font-weight: 700;
  margin: 0;
  line-height: calc(var(--font-size-corps) + 0.5rem);
}

span {
  font-size: var(--font-size-corps);
  color: var(--color-corps-text);
}

@media screen and (min-width: 480px) {
  h2 {
    font-size: var(--font-size-corps);
  }
}

.icon {
  height: 20px;
}

header {
  position: fixed;
  display: flex;
  left: 0;
  top: 0;
  height: 56px;
  width: 100%;
  box-sizing: border-box;
  align-items: center;
  background: var(--color-background);
  gap: var(--gap-small);
  padding-inline: 1rem;
  z-index: 3;
}

.logo-mobile,
.logo-desktop {
  height: 25px;
}

.search-icon {
  flex: 1;
  display: flex;
  justify-content: flex-end;
}

.notification-icon-container {
  position: relative;
  margin-left: auto;
}

.avatar {
  width: 30px;
  height: 30px;
  border-radius: 50%;
  aspect-ratio: 1/1;
  background: orange;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--color-background);
}

.desktop-search-header {
  display: none;
}
@media screen and (min-width: 480px) {
  .avatar {
    width: 35px;
    height: 35px;
  }
  header {
    position: fixed;
    width: calc(100% - 5rem);
    left: 5rem;
  }

  .icon {
    height: 25px;
  }
}

@media screen and (min-width: 768px) {
  header {
    width: calc(100% - 240px);
    left: 240px;
  }
  .search-icon {
    display: none;
  }
  .desktop-search-header {
    display: flex;
    width: 100%;
    align-items: center;
    justify-content: center;
  }
  .desktop-search-header input {
    border: 1px solid var(--color-white-a1);
    background: var(--color-white-a);
    color: white;
    padding: 0.75rem 1.25rem;
    border-radius: 20px 0px 0px 20px;
    width: 70%;
    max-width: 350px;
  }
  .bars-desktop {
    background: var(--color-background);
    padding: 5px;
    border-radius: 5px;
    margin-top: -5px;
    cursor: pointer;
  }
  .search-validation {
    background: var(--color-white-a1);
    border-radius: 0px 20px 20px 0px;
    padding: 0.45rem 1rem;
    cursor: pointer;
  }
  .search-validation-container,
  .vocal-search-container {
    height: calc(25px + 0.9rem);
  }

  .vocal-search {
    background: var(--color-white-a1);
    border-radius: 50%;
    padding: 0.5rem;
    margin-left: 1rem;
    cursor: pointer;
  }
  .search-validation:hover,
  .vocal-search:hover,
  .bars-desktop:hover {
    background: var(--color-white-a2);
  }
  .search-validation:active,
  .vocal-search:active,
  .bars-desktop:active {
    background: var(--color-white-a3);
  }
}

.tag-bar {
  position: fixed;
  display: flex;
  left: 0;
  top: 56px;
  height: 56px;
  width: 100%;
  box-sizing: border-box;
  background: var(--color-background);
  align-items: center;
  gap: var(--gap-small);
  padding-inline: 1rem;
  z-index: 2;
  border-top: 1px solid var(--color-white-a2);
  border-bottom: 1px solid var(--color-white-a2);
}

.tag-content {
  display: flex;
  align-items: center;
  gap: var(--gap-small);
  overflow-y: auto;
  mask-image: linear-gradient(90deg, rgba(0, 0, 0, 1) 80%, transparent 95%);
  scrollbar-width: none;
}
.tag-content::-webkit-scrollbar {
  display: none;
}

.tag-content span {
  white-space: nowrap;
  background: var(--color-white-a1);
  padding: 0.35rem 0.7rem;
  border-radius: 5px;
  color: white;
  cursor: pointer;
}

.tag-content span:hover {
  background: var(--color-white-a2);
}

.tag-content span:active {
  background: var(--color-white-a3);
}
.tag-content span:focus {
  background: white;
  color: black;
}

.tag-content span:nth-child(2) {
  background: white;
  color: black;
}

@media screen and (min-width: 480px) {
  .tag-bar {
    width: calc(100% - 5rem);
    left: 5rem;
    border: none;
  }
}

@media screen and (min-width: 768px) {
  .tag-bar {
    width: calc(100% - 240px);
    left: 240px;
  }
}

.loader {
  height: 32px;
  width: 32px;
  animation: loader 4.8s linear infinite;
  margin-inline: auto;
  margin-block: 50px;
}

@keyframes loader {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.loader span {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: auto;
  height: 32px;
  width: 32px;
  clip: rect(0, 32px, 32px, 16px);
  animation: loaderSpan 1.2s linear infinite;
}

@keyframes loaderSpan {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(220deg);
  }
}
.loader span::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: auto;
  height: 32px;
  width: 32px;
  clip: rect(0, 32px, 32px, 16px);
  border: 3px solid #fff;
  border-radius: 50%;
  animation: loaderAfter 1.2s cubic-bezier(0.77, 0, 0.175, 1) infinite;
  box-sizing: border-box;
}

@keyframes loaderAfter {
  from {
    transform: rotate(-140deg);
  }
  50% {
    transform: rotate(-160deg);
  }
  to {
    transform: rotate(140deg);
  }
}

.navBar {
  position: fixed;
  bottom: 0;
  width: 100%;
  height: 56px;
  display: flex;
  background: var(--color-background);
  justify-content: space-around;
  align-items: center;
  z-index: 2;
}
.nav-icons-desktop {
  display: flex;
  gap: var(--gap-small);
  margin-bottom: 1rem;
}
.navbar-icon-group {
  display: flex;
  width: 100%;
  justify-content: flex-start;
  align-items: center;
  gap: var(--gap-small);
  font-size: var(--font-size-caption);
  padding: 10px;
  box-sizing: border-box;
  border-radius: 10px;
  cursor: pointer;
}

.navbar-icon-group:hover {
  background-color: var(--color-white-a1);
}
.navbar-icon-group:active {
  background-color: var(--color-white-a2);
}
@media screen and (min-width: 480px) {
  .navBar {
    flex-direction: column;
    justify-content: flex-start;
    padding-top: 1rem;
    top: 0;
    width: 5rem;
    height: 100dvh;
  }
}

@media screen and (min-width: 768px) {
  .navBar {
    width: 240px;
    align-items: flex-start;
    padding-left: 1rem;
    box-sizing: border-box;
  }
  .logo-mobile {
    display: none;
  }
  .navbar-icon-group {
    font-size: var(--font-size-corps);
  }
}

@media screen and (max-width: 480px) {
  .navBar {
    border-top: 1px solid var(--color-white-a2);
  }
  .nav-icons-desktop {
    display: none;
  }
}

@media screen and (max-width: 768px) {
  .logo-desktop {
    display: none;
  }
  .navbar-icon-group {
    flex-direction: column;
    gap: 0;
  }
}
/* üèÅ

  START VIDEO CARDS

üèÅ */

.content-section {
  width: 100%;
  box-sizing: border-box;
  /* 
    üê∂ Il est temps de donner un coup de style √† notre content-section.
    propose une distribution en colonne des √©l√©ments avec un gap --gap-medium.
    Ajoute de la marge en haut et en bas afin que le contenu √† l'interieur ne chevauche pas le header
    et que le contenu ne soit pas coll√© au pied de la page. 
    Pour info la hauteur total du header + tagbar est de 112px
  */
}
.container-video-landscape {
  /* 
    üê∂ Propose ici aussi une distribution en colonne avec un gap small.
  */
}

.container-video-landscape:active {
  background: var(--color-white-a);
}
.thumb-landscape-section {
  /* 
    üê∂ nous allons avoir un element enfant qui sera en position absolu.
    passe ce conteneur en position relative afin que l'√©l√©ment enfant se positionne en fonction du cotneneur actuel.
  */
}
.thumb-landscape-video {
  width: 100%;
  /* 
    üê∂ documente toi sur la propri√©t√© aspect-ratio et fait en sorte 
    d'avoir un ratio en seize neuvieme de notre element.
    fais un petit tour aussi sur la documentation de object-fit .
    ici le but est que tu mette la bonne valeur 
    pour avoir notre image qui couvre tout le conteneur sans d√©formation d'image.
  */
}

.video-duration {
  /* 
    üê∂ rien √† faire ici, mais si tu ne vois pas le temps de la vid√©o 
    c'est que tu as mal fais quelque chose plus haut, penses aux positions relative !
  */
  position: absolute;
  right: 7px;
  bottom: 7px;
  background: var(--color-background);
  padding: 3px;
  border-radius: 4px;
}
.video-avatar {
  width: 40px;
  height: 40px;
  object-fit: cover;
  border-radius: 50%;
}
.video-details {
  display: flex;
  gap: var(--gap-small);
  align-items: flex-start;
  padding: 5px;
}
.video-title {
  display: flex;
  flex-direction: column;
  gap: 0;
}
.certified-user {
  margin-top: 0.3rem;
}
.username img {
  display: none;
}
.certified-user img {
  display: inline-block;
  height: 0.8em;
  margin-left: 0.5em;
}

@media screen and (min-width: 480px) {
  .content-section {
    padding-top: 10rem;
    padding: 10rem 2rem 2rem 7rem;
    margin-top: 0px;
  }
  .thumb-landscape-video {
    width: 420px;
    border-radius: 12px;
  }
  .container-video-landscape {
    max-width: min-content;
  }
}
@media screen and (min-width: 768px) {
  .content-section {
    padding-left: 250px;
  }
}

.row-video-landscape {
  display: flex;
  flex-direction: column;
  gap: var(--gap-medium);
}

/* 
  üê∂ Tout comme pour la tagbar,
  nous voulons supprimer la scrollbar de notre element .row-video-landscape
 */

@media screen and (min-width: 480px) {
  .row-video-landscape {
    /* 
    üê∂ passe les √©l√©ments dans la direction "row car sur mobile on √† d√©finis sur colonne
    et par default nous gardons cette directions pour tous les √©crans sauf si nous redefinissons cela.
    g√®re aussi l'overflow pour obtenir le scroll.
     */
    /* 
    üê∂ et encore Tout comme pour la tagbar,
    ajoute un mask en fondu sur la droite
   */
  }
}
